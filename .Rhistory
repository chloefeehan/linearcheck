}
return(commentary)
}
swtable(data, x, commentary = TRUE)
#swtable(data, x, commentary = TRUE)
#data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
qqgraph(data, x, y)
library(ggplot2)
library(tidyverse)
# Returning QQ Plot
qqgraph <- function(data, x, y) {
plot <- ggplot(data = data, mapping = aes(x = {{x}}, y = {{y}})) +
geom_point(color = "darkorange") +
geom_abline(intercept = 0, slope = 1, color = "blue") +
labs(x = "X", y = "Y", title = "Quantile-Quantile Plot") +
theme_bw()
return(plot)
}
# Printing out Shapiro-Wilk test and commentary if wanted
# Source for shapiro.test: https://www.geeksforgeeks.org/shapiro-wilk-test-in-r-programming/
swtable <- function(data, x, commentary = NULL) {
x_col <- data$x
sw_values <- shapiro.test(x_col)
print(sw_values)
if (commentary == TRUE) {
commentary <- normality_commentary(sw_values)
cat("\nCommentary: ", commentary, "\n")
}
}
normality_commentary <- function(sw_values) {
if (sw_values$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is greater than 0.05. This passes the normality assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is less than or equal to 0.05. This violates the normality assumption.")
}
return(commentary)
}
#swtable(data, x, commentary = TRUE)
#data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
qqgraph(data, x, y)
# Returning QQ Plot
qqgraph <- function(data, x, y) {
plot <- ggplot(data = data, mapping = aes(x = {{y}}, y = {{x}})) +
geom_point(color = "darkorange") +
geom_abline(intercept = 0, slope = 1, color = "blue") +
labs(x = "X", y = "Y", title = "Quantile-Quantile Plot") +
theme_bw()
return(plot)
}
# Printing out Shapiro-Wilk test and commentary if wanted
# Source for shapiro.test: https://www.geeksforgeeks.org/shapiro-wilk-test-in-r-programming/
swtable <- function(data, x, commentary = NULL) {
x_col <- data$x
sw_values <- shapiro.test(x_col)
print(sw_values)
if (commentary == TRUE) {
commentary <- normality_commentary(sw_values)
cat("\nCommentary: ", commentary, "\n")
}
}
normality_commentary <- function(sw_values) {
if (sw_values$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is greater than 0.05. This passes the normality assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is less than or equal to 0.05. This violates the normality assumption.")
}
return(commentary)
}
#swtable(data, x, commentary = TRUE)
#data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
qqgraph(data, x, y)
# Returning QQ Plot
qqgraph <- function(data, x, y) {
plot <- ggplot(data = data, mapping = aes(x = {{x}}, y = {{y}})) +
geom_point(color = "darkorange") +
geom_abline(intercept = 0, slope = 1, color = "blue") +
labs(x = "X", y = "Y", title = "Quantile-Quantile Plot") +
theme_bw() +
coord_fixed()
return(plot)
}
# Printing out Shapiro-Wilk test and commentary if wanted
# Source for shapiro.test: https://www.geeksforgeeks.org/shapiro-wilk-test-in-r-programming/
swtable <- function(data, x, commentary = NULL) {
x_col <- data$x
sw_values <- shapiro.test(x_col)
print(sw_values)
if (commentary == TRUE) {
commentary <- normality_commentary(sw_values)
cat("\nCommentary: ", commentary, "\n")
}
}
normality_commentary <- function(sw_values) {
if (sw_values$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is greater than 0.05. This passes the normality assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is less than or equal to 0.05. This violates the normality assumption.")
}
return(commentary)
}
#swtable(data, x, commentary = TRUE)
#data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
qqgraph(data, x, y)
plot <- ggplot(data = data, mapping = aes(x = {{x}}, y = {{y}})) +
geom_point(color = "darkorange") +
geom_abline(intercept = 0, slope = 1, color = "blue") +
labs(x = "X", y = "Y", title = "Quantile-Quantile Plot") +
theme_bw()
return(plot)
library(ggplot2)
library(tidyverse)
# Returning QQ Plot
qqgraph <- function(data, x, y) {
plot <- ggplot(data = data, mapping = aes(x = {{x}}, y = {{y}})) +
geom_point(color = "darkorange") +
geom_abline(intercept = 0, slope = 1, color = "blue") +
labs(x = "X", y = "Y", title = "Quantile-Quantile Plot") +
theme_bw()
return(plot)
}
# Printing out Shapiro-Wilk test and commentary if wanted
# Source for shapiro.test: https://www.geeksforgeeks.org/shapiro-wilk-test-in-r-programming/
swtable <- function(data, x, commentary = NULL) {
x_col <- data$x
sw_values <- shapiro.test(x_col)
print(sw_values)
if (commentary == TRUE) {
commentary <- normality_commentary(sw_values)
cat("\nCommentary: ", commentary, "\n")
}
}
normality_commentary <- function(sw_values) {
if (sw_values$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is greater than 0.05. This passes the normality assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is less than or equal to 0.05. This violates the normality assumption.")
}
return(commentary)
}
#swtable(data, x, commentary = TRUE)
#data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
qqgraph(data, x, y)
?dwtest
library(ggplot2)
library(tidyverse)
# Returning ACF and PACF
acf_pacf <- function(data, x, y) {
acf(x, main = "X ACF Plot")
pacf(x, main = "X PACF Plot")
acf(y, main = "Y ACF Plot")
pacf(y, main = "Y PACF Plot")
}
# Printing out Durbin-Watson test and commentary if wanted
dwtable <- function(data, x, y, commentary = NULL) {
dw_value <- dwtest(y ~ x, data = data)
print(dw_value)
if (commentary == TRUE) {
commentary <- independence_commentary(dw_value)
cat("\nCommentary: ", commentary, "\n")
}
}
independence_commentary <- function(dw_value) {
if (dw_value$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is greater than 0.05. This passes the independence assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is less than or equal to 0.05. This violates the independence assumption.")
}
return(commentary)
}
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
dwtable(data, x, y, commentary = TRUE)
acf_pacf(data, x, y)
# Returning ACF and PACF
acf_pacf <- function(data, x, y) {
acf(data$x, main = "X ACF Plot")
pacf(data$x, main = "X PACF Plot")
acf(data$y, main = "Y ACF Plot")
pacf(data$y, main = "Y PACF Plot")
}
# Printing out Durbin-Watson test and commentary if wanted
dwtable <- function(data, x, y, commentary = NULL) {
dw_value <- dwtest(y ~ x, data = data)
print(dw_value)
if (commentary == TRUE) {
commentary <- independence_commentary(dw_value)
cat("\nCommentary: ", commentary, "\n")
}
}
independence_commentary <- function(dw_value) {
if (dw_value$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is greater than 0.05. This passes the independence assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is less than or equal to 0.05. This violates the independence assumption.")
}
return(commentary)
}
dwtable(data, x, y, commentary = TRUE)
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
acf_pacf(data, x, y)
# Returning ACF and PACF
acf_pacf <- function(data, x, y) {
par(mfrow=c(2,2))
acf(data$x, main = "X ACF Plot")
pacf(data$x, main = "X PACF Plot")
acf(data$y, main = "Y ACF Plot")
pacf(data$y, main = "Y PACF Plot")
}
# Printing out Durbin-Watson test and commentary if wanted
dwtable <- function(data, x, y, commentary = NULL) {
dw_value <- dwtest(y ~ x, data = data)
print(dw_value)
if (commentary == TRUE) {
commentary <- independence_commentary(dw_value)
cat("\nCommentary: ", commentary, "\n")
}
}
independence_commentary <- function(dw_value) {
if (dw_value$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is greater than 0.05. This passes the independence assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is less than or equal to 0.05. This violates the independence assumption.")
}
return(commentary)
}
dwtable(data, x, y, commentary = TRUE)
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
acf_pacf(data, x, y)
acf_pacf(data, x, y)
pr_push()
pr_merge_main()
library(usethis)
pr_merge_main()
pr_merge_main()
pr_push()
pr_merge_main()
library(usethis)
use_test("independence")
# Returning ACF and PACF
acf_pacf <- function(data, x, y) {
par(mfrow=c(2,2))
acf(data$x, main = "X ACF Plot")
pacf(data$x, main = "X PACF Plot")
acf(data$y, main = "Y ACF Plot")
pacf(data$y, main = "Y PACF Plot")
}
dwtable <- function(data, x, y, commentary = NULL) {
dw_value <- dwtest(y ~ x, data = data)
print(dw_value)
if (commentary == TRUE) {
commentary <- independence_commentary(dw_value)
cat("\nCommentary: ", commentary, "\n")
}
}
independence_commentary <- function(dw_value) {
if (dw_value$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is greater than 0.05. This passes the independence assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is less than or equal to 0.05. This violates the independence assumption.")
}
return(commentary)
}
dwtable(data, x, y, commentary = TRUE)
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
acf_pacf(data, x, y)
# library(ggplot2)
# library(tidyverse)
library(lmtest)
# Returning ACF and PACF
acf_pacf <- function(data, x, y) {
par(mfrow=c(2,2))
acf(data$x, main = "X ACF Plot")
pacf(data$x, main = "X PACF Plot")
acf(data$y, main = "Y ACF Plot")
pacf(data$y, main = "Y PACF Plot")
}
dwtable <- function(data, x, y, commentary = NULL) {
dw_value <- dwtest(y ~ x, data = data)
print(dw_value)
if (commentary == TRUE) {
commentary <- independence_commentary(dw_value)
cat("\nCommentary: ", commentary, "\n")
}
}
independence_commentary <- function(dw_value) {
if (dw_value$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is greater than 0.05. This passes the independence assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is less than or equal to 0.05. This violates the independence assumption.")
}
return(commentary)
}
dwtable(data, x, y, commentary = TRUE)
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
acf_pacf(data, x, y)
export(dwtable)
install.packages("stats")
install.packages("stats")
library(linearcheck)
# Returning ACF and PACF
acf_pacf <- function(data, x, y) {
par(mfrow=c(2,2))
acf(data$x, main = "X ACF Plot")
pacf(data$x, main = "X PACF Plot")
acf(data$y, main = "Y ACF Plot")
pacf(data$y, main = "Y PACF Plot")
}
dwtable <- function(data, x, y, commentary = NULL) {
dw_value <- dwtest(y ~ x, data = data)
print(dw_value)
if (commentary == TRUE) {
commentary <- independence_commentary(dw_value)
cat("\nCommentary: ", commentary, "\n")
}
}
independence_commentary <- function(dw_value) {
if (dw_value$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is greater than 0.05. This passes the independence assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not independence",
"in the model because the p-value:", round(dw_value$p.value, 4),
"is less than or equal to 0.05. This violates the independence assumption.")
}
return(commentary)
}
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
dwtable(data, x, y, commentary = TRUE)
library(linearcheck)
devtools::document()
library(linearcheck)
library(usethis)
pr_push()
library(usethis)
pr_merge_main()
library(linearcheck)
library(linearcheck)
library(linearcheck)
use_test("normality")
library(usethis)
use_test("normality")
library(linearcheck)
# Returning QQ Plot
qqgraph <- function(data, x, y) {
plot <- ggplot(data = data, mapping = aes(x = {{x}}, y = {{y}})) +
geom_point(color = "lightblue") +
geom_abline(intercept = 0, slope = 1, color = "blue") +
labs(x = "X", y = "Y", title = "Quantile-Quantile Plot") +
theme_bw()
return(plot)
}
# Source for shapiro.test: https://www.geeksforgeeks.org/shapiro-wilk-test-in-r-programming/
swtable <- function(data, x, commentary = NULL) {
x_col <- data$x
sw_values <- shapiro.test(x_col)
print(sw_values)
if (commentary == TRUE) {
commentary <- normality_commentary(sw_values)
cat("\nCommentary: ", commentary, "\n")
}
}
normality_commentary <- function(sw_values) {
if (sw_values$p.value > 0.05) {
commentary <- paste("There is significant evidence to conclude there is normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is greater than 0.05. This passes the normality assumption.")
} else {
commentary <- paste("There is significant evidence to conclude there is not normality",
"in the model because the p-value:", round(sw_values$p.value, 4),
"is less than or equal to 0.05. This violates the normality assumption.")
}
return(commentary)
}
swtable(data, x, commentary = TRUE)
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
qqgraph(data, x, y)
library(linearcheck)
library(linearcheck)
swtable(data, x, commentary = TRUE)
library(linearcheck)
use_test("linearity")
library(linearcheck)
library(linearcheck)
# Creates a linear plot with line of best fit
linearplot <- function(data, x, y, title) {
plot <- ggplot(data, mapping = aes(x = {{x}}, y = {{y}})) +
geom_point(color = "blue") +
geom_smooth(method = "lm", fill = "lightblue", color = "aquamarine4") +
theme_bw() +
labs(title = title) +
theme_bw()
print(plot)
}
stats_table <- function(model, commentary = NULL) {
model_summary <- summary(model)
print(model_summary)
if (commentary == TRUE) {
commentary <- linearity_commentary(model)
cat(commentary, "\n")
}
}
linearity_commentary <- function(model) {
#Get summary statistics
model_summary <- summary(model)
# Get adjusted r-squared value
adj_rsquared <- model_summary$adj.r.squared
f_stat <- model_summary$fstatistic[1]
df1 <- model_summary$fstatistic[2]
df2 <- model_summary$fstatistic[3]
# Calculate the p-value for the F-statistic
p_value <- pf(f_stat, df1, df2, lower.tail = FALSE)
#Conditions for adjusted r-squared value and interpretations
if (adj_rsquared >= 0.8) {
direction <- "positive"
value <-  "is greater than or equal to 0.8"
strength <- "a strong"
} else if (adj_rsquared >= 0.5 & adj_rsquared < 0.8) {
direction <- "positive"
value <-  "is between 0.5 and 0.8"
strength <- "a moderate"
} else if (adj_rsquared > 0 & adj_rsquared < 0.5) {
direction <- "positive"
value <-  "is between 0 and 0.5"
strength <- "a weak"
} else if (adj_rsquared > -0.5 & adj_rsquared < 0) {
direction <- "negative"
value <-  "is between -0.5 and 0"
strength <- "a weak"
} else if (adj_rsquared <= -0.5 & adj_rsquared > -0.8) {
direction <- "negative"
value <-  "is between -0.8 and -0.5"
strength <- "a moderate"
} else if (adj_rsquared <= -0.8) {
direction <- "negative"
value <-   "is less than or equal to -0.8"
strength <- "a strong"
} else if (adj_rsquared == 0) {
direction <- ""
value <-   "equals zero"
strength <- "no"
}
#Pastes together the adjusted r-squared interpretations
r <- paste0("The adjusted r-squared value is ", round(adj_rsquared, 4),
". Since ", round(adj_rsquared, 4),
" ", value, " this demonstrates ", strength, " ", direction,
" relationship between the predictor and response variables.")
#Conditions for p-value interpretations
if (p_value > 0.05) {
p <- paste0("There is not enough evidence to conclude that at least one of the ",
"predictors in the model has a significant effect on the response ",
"because the p-value: ",round(p_value, 4),".")
} else {
p <- paste0("There is significant evidence to conclude that at least one of the ",
"predictors in the model has a significant effect on the response ",
"because the p-value: ", round(p_value, 4),".")
}
# Pastes both interpretations
commentary <- cat(r, p, sep = "\n")
return(commentary)
}
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
model <- lm(y~x, data = data)
linearity_commentary(model)
stats_table(model, commentary = TRUE)
library(linearcheck)
library(linearcheck)
library(linearcheck)
library(linearcheck)
library(linearcheck)
data <- data.frame(x = c(1, 2, 3, 4, 5, 6), y = c(2, 4, 7, 10, 11, 14))
model <- lm(y~x, data = data)
stats_table(model, commentary = TRUE)
library(linearcheck)
library(linearcheck)
library(usethis)
pr_push()
